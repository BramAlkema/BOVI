const e=e=>document.querySelector(e),t=e=>Array.from(document.querySelectorAll(e)),n=e=>{e.hidden=!1},i=e=>{e.hidden=!0},a=(e,t)=>e.classList.add(t),r=(e,t)=>e.classList.remove(t),s=(e,t)=>{e.innerHTML=t},o=(e,t="",n="")=>{const i=document.createElement(e);return t&&(i.className=t),n&&(i.innerHTML=n),i},c=(e,t,n)=>{e.addEventListener(t,n)},d=(e,t,n,i)=>{e.addEventListener(n,e=>{e.target.matches(t)&&i.call(e.target,e)})},l=(e,t="down",n=300)=>{e.style.transform={down:"translateY(-10px)",up:"translateY(10px)",left:"translateX(10px)",right:"translateX(-10px)"}[t],e.style.opacity="0",e.style.transition=`transform ${n}ms ease, opacity ${n}ms ease`,e.hidden=!1,requestAnimationFrame(()=>{e.style.transform="translate(0)",e.style.opacity="1"})};class m{constructor(){this.currentTab="overview",this.tabButtons=t(".tab"),this.sections=t("main > section"),this.init()}init(){this.tabButtons.forEach(e=>{c(e,"click",t=>{t.preventDefault();const n=e.dataset.tab;n&&this.navigateToTab(n)})}),c(window,"popstate",e=>{const t=e.state?.tab||"overview";this.navigateToTab(t,!1)}),this.updateActiveTab(),this.showSection(this.currentTab)}navigateToTab(e,t=!0){e!==this.currentTab&&(this.currentTab=e,this.updateActiveTab(),this.showSection(e),t&&history.pushState({tab:e},"",`#${e}`),window.dispatchEvent(new CustomEvent("bovi:navigate",{detail:{tab:e}})))}updateActiveTab(){this.tabButtons.forEach(e=>{const t=e;t.dataset.tab===this.currentTab?(t.setAttribute("aria-current","page"),a(t,"active")):(t.removeAttribute("aria-current"),r(t,"active"))})}showSection(e){this.sections.forEach(t=>{const a=t;a.id===e?(n(a),a.setAttribute("aria-hidden","false")):(i(a),a.setAttribute("aria-hidden","true"))})}getCurrentTab(){return this.currentTab}goTo(e){this.navigateToTab(e)}}let u=null;class p{constructor(e,t,n,i){this.id=e,this.title=t,this.primaryMode=n,this.description=i,this.breakdown={},this.insights=[]}addModeBreakdown(e,t){return this.breakdown[e]=t,this}addInsights(...e){return this.insights.push(...e),this}}const h=new class{constructor(){this.scenarios=new Map,this.currentScenario=null}registerScenario(e,t){this.scenarios.set(e,t)}showScenario(t,n){const i=this.scenarios.get(t);if(!i)return void console.warn(`Scenario '${t}' not found`);const a=e(n);if(!a)return void console.warn(`Container '${n}' not found`);this.currentScenario=i;const r=this.renderScenarioAnalysis(i);s(a,r),l(a)}renderScenarioAnalysis(e){const t=e.primaryMode||"balanced",n=e.breakdown||{},i=Object.entries(n).map(([e,n])=>{const i=e===t,a=this.getModeLabel(e);return`\n        <div class="mode-breakdown-card ${e} ${i?"primary":""}">\n          <div class="mode-header">\n            <span class="mode-badge ${e}">${e[0].toUpperCase()}</span>\n            <strong>${a}${i?" (Primary)":""}</strong>\n          </div>\n          <p class="text-small">${n}</p>\n        </div>\n      `}).join("");return`\n      <div class="scenario-analysis">\n        <h3>${e.title}</h3>\n        <div class="scenario-description">\n          <p class="text-muted">${e.description||""}</p>\n        </div>\n        <div class="mode-breakdown">\n          <h4>BOVI Mode Analysis:</h4>\n          <div class="mode-cards">\n            ${i}\n          </div>\n        </div>\n        <div class="scenario-insights">\n          ${this.renderInsights(e)}\n        </div>\n      </div>\n    `}renderInsights(e){return e.insights?`\n      <div class="insights-section">\n        <h4>Key Insights:</h4>\n        <ul class="insights-list">\n          ${e.insights.map(e=>`<li>${e}</li>`).join("")}\n        </ul>\n      </div>\n    `:""}getModeLabel(e){return{balanced:"Balanced (Equality Matching)",obligated:"Obligated (Authority Ranking)",value:"Value (Market Pricing)",immediate:"Immediate (Communal Sharing)"}[e]||e}getAvailableScenarios(){return Array.from(this.scenarios.keys())}},g=e=>{h.registerScenario(e.id,e)},v=(e,t)=>h.showScenario(e,t);class f{constructor(e,t,n,i){this.id=e,this.title=t,this.mode=n,this.description=i}createDemoStructure(e,t){const n=o("div","demo-result");return n.innerHTML=`\n      <h4>${this.title}</h4>\n      <div class="demo-content">${t}</div>\n    `,e.appendChild(n),n}createModeAnalysis(e){const t={balanced:"Balanced (Equality Matching)",obligated:"Obligated (Authority Ranking)",value:"Value (Market Pricing)",immediate:"Immediate (Communal Sharing)"};return`<div class="mode-analysis">${["balanced","obligated","value","immediate"].map(n=>e[n]?`\n        <div class="mode-item">\n          <span class="mode-badge ${n}">${n[0].toUpperCase()}</span>\n          <div>\n            <strong>${t[n]}:</strong>\n            <p class="text-small">${e[n]}</p>\n          </div>\n        </div>\n      `:"").join("")}</div>`}}const b=new class{constructor(){this.demos=new Map,this.activeDemo=null}registerDemo(e,t){this.demos.set(e,t)}async runDemo(t,n){const i=this.demos.get(t);if(!i)return void console.warn(`Demo '${t}' not found`);const a=e(n);if(a){this.activeDemo=i;try{s(a,""),await i.run(a),l(a)}catch(e){console.error(`Error running demo '${t}':`,e),s(a,'<p class="text-muted">Demo failed to load</p>')}}else console.warn(`Container '${n}' not found`)}getAvailableDemos(){return Array.from(this.demos.keys())}};var y;!function(e){e.BALANCED="B",e.OBLIGATED="O",e.VALUE="V",e.IMMEDIATE="I"}(y||(y={}));const w="bovi.rulerChanged",k="bovi.kpi.updated";class _ extends EventTarget{emit(e,t,n){const i=new CustomEvent(e,{detail:t,bubbles:n?.bubbles??!1,cancelable:n?.cancelable??!1});return"undefined"!=typeof window&&"localhost"===window.location.hostname&&console.log(`🚌 BOVI Event: ${e}`,t),this.dispatchEvent(i)}on(e,t,n){this.addEventListener(e,t,n)}off(e,t,n){this.removeEventListener(e,t,n)}once(e,t){this.addEventListener(e,t,{once:!0})}}const x=new _;x.emit.bind(x),x.on.bind(x),x.off.bind(x),x.once.bind(x);new class{constructor(){this.logs=[],Object.keys({}).forEach(e=>{x.addEventListener(e,t=>{const n=t;this.logEvent(e,n.detail)})})}logEvent(e,t){const n={timestamp:Date.now(),event_type:e,flow:t.flow||"unknown",node:t.node,detail:{...t},user_agent:navigator.userAgent};this.logs.push(n),"undefined"!=typeof window&&window.indexedDB&&this.persistLog(n)}async persistLog(e){try{const t=indexedDB.open("bovi-audit",1);t.onsuccess=()=>{t.result.transaction(["logs"],"readwrite").objectStore("logs").add(e)}}catch(e){console.warn("Failed to persist audit log:",e)}}getLogs(e){let t=this.logs;return e?.flow&&(t=t.filter(t=>t.flow===e.flow)),e?.mode&&(t=t.filter(t=>t.event_type.startsWith(`${e.mode}.`))),e?.since&&(t=t.filter(t=>t.timestamp>=e.since)),t}export(){return JSON.stringify(this.logs,null,2)}clear(){this.logs=[]}};class M{constructor(){this.channel=new BroadcastChannel("bovi-flows"),Object.keys({}).forEach(e=>{x.addEventListener(e,t=>{const n=t;this.channel.postMessage({type:e,detail:n.detail,timestamp:Date.now()})})}),this.channel.addEventListener("message",e=>{const{type:t,detail:n}=e.data;n.__fromStudio||x.emit(t,{...n,__fromStudio:!0})})}close(){this.channel.close()}}"undefined"!=typeof window&&new M;const S=new class{constructor(){this.metrics=new Map,x.on(k,e=>{"object"==typeof e.detail.value&&"name"in e.detail.value&&this.metrics.set(e.detail.kpi,e.detail.value)})}getMetrics(){return Array.from(this.metrics.values())}getMetric(e){return this.metrics.get(e)}getMetricsByStatus(e){return this.getMetrics().filter(t=>t.status===e)}getHealthScore(){const e=this.getMetrics();if(0===e.length)return 1;const t={green:1,amber:.5,red:0};return e.reduce((e,n)=>e+t[n.status],0)/e.length}getHealthStatus(){const e=this.getHealthScore();return e>=.9?"healthy":e>=.7?"degraded":"unhealthy"}getHealthSummary(){const e=this.getHealthScore(),t=this.getHealthStatus(),n=this.getMetricsByStatus("red"),i=this.getMetricsByStatus("amber"),a=this.getMetricsByStatus("green");return{status:t,score:e,issues:[...n.map(e=>`Critical: ${e.name} (${(100*e.value).toFixed(1)}%)`),...i.map(e=>`Warning: ${e.name} (${(100*e.value).toFixed(1)}%)`)],greenCount:a.length,amberCount:i.length,redCount:n.length}}clearMetrics(){this.metrics.clear()}exportMetrics(){const e={};return this.metrics.forEach((t,n)=>{e[n]={...t}}),e}},T={ruler_switch_time:{red:{max:1e3},amber:{min:200,max:1e3},green:{max:200},unit:"ms",description:"Time to switch between inflation rulers"},ruler_adoption_rate:{red:{max:.3},amber:{min:.3,max:.6},green:{min:.6},unit:"%",description:"Percentage of users trying non-default rulers within first week"},money_veil_calculation_time:{red:{max:1e3},amber:{min:500,max:1e3},green:{max:500},unit:"ms",description:"Time to calculate money-veil scenarios"},money_veil_engagement:{red:{max:.2},amber:{min:.2,max:.4},green:{min:.4},unit:"%",description:"Weekly active usage of money-veil card"},hamburger_viral_coefficient:{red:{max:.1},amber:{min:.1,max:.3},green:{min:.3},unit:"ratio",description:"Each user brings N new users via hamburger sharing"},local_index_computation_time:{red:{max:500},amber:{min:200,max:500},green:{max:200},unit:"ms",description:"Time to compute local inflation index (privacy requirement)"},contract_completion_rate:{red:{max:.7},amber:{min:.7,max:.9},green:{min:.9},unit:"%",description:"Percentage of created contracts that get signed"},contract_disputes_per_1k:{red:{min:10},amber:{min:3,max:10},green:{max:3},unit:"per 1k",description:"Contract disputes per 1000 contracts created"},contract_reversal_time:{red:{min:1728e5},amber:{min:864e5,max:1728e5},green:{max:864e5},unit:"ms",description:"Time to reverse problematic contracts"},cohort_satisfaction_rate:{red:{max:.9},amber:{min:.9,max:.95},green:{min:.95},unit:"%",description:"No-one-worse-off guarantee success rate"},cohort_fairness_check_time:{red:{min:2e3},amber:{min:1e3,max:2e3},green:{max:1e3},unit:"ms",description:"Time to verify fairness for 100-participant cohort"},storm_mode_activation_time:{red:{min:1e4},amber:{min:5e3,max:1e4},green:{max:5e3},unit:"ms",description:"End-to-end storm mode activation time"},storm_mode_effectiveness:{red:{max:.1},amber:{min:.1,max:.2},green:{min:.2},unit:"%",description:"Spending reduction during storm mode activation"},system_uptime:{red:{max:.95},amber:{min:.95,max:.99},green:{min:.99},unit:"%",description:"System availability and uptime"},api_response_time:{red:{min:1e3},amber:{min:500,max:1e3},green:{max:500},unit:"ms",description:"Average API response time"},failed_payment_rate:{red:{min:.02},amber:{min:.005,max:.02},green:{max:.005},unit:"%",description:"Payment failure rate P90"},rule_compliance_rate:{red:{max:.8},amber:{min:.8,max:.9},green:{min:.9},unit:"%",description:"Percentage of flows using latest rules"},appeal_resolution_time:{red:{min:6048e5},amber:{min:2592e5,max:6048e5},green:{max:2592e5},unit:"ms",description:"Time to resolve user appeals P90"}};function E(e,t,n="stable"){const i=T[e],a=function(e,t){const n=T[e];return n?void 0!==n.red.min&&t>=n.red.min||void 0!==n.red.max&&t<=n.red.max?"red":void 0!==n.green.min&&t>=n.green.min||void 0!==n.green.max&&t<=n.green.max?"green":"amber":"amber"}(e,t);return{name:e,value:t,threshold:i?.green?.min??i?.green?.max??t,status:a,trend:n}}const B={Performance:["ruler_switch_time","money_veil_calculation_time","local_index_computation_time","cohort_fairness_check_time","storm_mode_activation_time","api_response_time"],"User Engagement":["ruler_adoption_rate","money_veil_engagement","hamburger_viral_coefficient","contract_completion_rate","cohort_satisfaction_rate"],"System Quality":["system_uptime","failed_payment_rate","rule_compliance_rate","contract_disputes_per_1k","appeal_resolution_time"],"Feature Effectiveness":["storm_mode_effectiveness","contract_reversal_time"]};function $(){const e=function(){const e=document.createElement("div");return e.className="kpi-dashboard-panel panel",e.innerHTML='\n    <div class="kpi-header">\n      <h3>📊 System Health Dashboard</h3>\n      <div class="kpi-overall-status" id="kpi-overall-status">\n        <span class="status-indicator loading"></span>\n        <span class="status-text">Loading...</span>\n      </div>\n    </div>\n    <p class="text-muted">Real-time monitoring of BOVI Framework performance and user engagement</p>\n    \n    <div class="kpi-summary" id="kpi-summary">\n      <div class="kpi-summary-card green">\n        <div class="kpi-count" id="kpi-green-count">0</div>\n        <div class="kpi-label">Healthy</div>\n      </div>\n      <div class="kpi-summary-card amber">\n        <div class="kpi-count" id="kpi-amber-count">0</div>\n        <div class="kpi-label">Warning</div>\n      </div>\n      <div class="kpi-summary-card red">\n        <div class="kpi-count" id="kpi-red-count">0</div>\n        <div class="kpi-label">Critical</div>\n      </div>\n    </div>\n    \n    <div class="kpi-categories" id="kpi-categories">\n      \x3c!-- KPI categories will be rendered here --\x3e\n    </div>\n    \n    <div class="kpi-actions">\n      <button class="btn secondary" id="kpi-refresh-btn">Refresh Metrics</button>\n      <button class="btn ghost" id="kpi-export-btn">Export Data</button>\n    </div>\n  ',function(e){const t=e.querySelector("#kpi-refresh-btn"),n=e.querySelector("#kpi-export-btn");t?.addEventListener("click",()=>{C(),A("Metrics refreshed","info")}),n?.addEventListener("click",()=>{!function(){const e={timestamp:(new Date).toISOString(),summary:S.getHealthSummary(),metrics:S.exportMetrics(),definitions:T},t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=URL.createObjectURL(t),i=document.createElement("a");i.href=n,i.download=`bovi-kpi-export-${(new Date).toISOString().slice(0,10)}.json`,i.click(),URL.revokeObjectURL(n),A("KPI data exported successfully","info")}()})}(e),e}(),t=document.querySelector("main");t&&!t.querySelector(".kpi-dashboard-panel")&&t.appendChild(e),C(),setInterval(C,3e4),window.addEventListener(k,C)}function C(){!function(){const e=document.querySelector("#kpi-overall-status");if(!e)return;const t=S.getHealthSummary(),n=e.querySelector(".status-indicator"),i=e.querySelector(".status-text");if(n&&i){n.className=`status-indicator ${t.status}`;const a={healthy:"All Systems Operational",degraded:"Some Issues Detected",unhealthy:"Critical Issues Present"};i.textContent=a[t.status],e.setAttribute("title",`Health Score: ${(100*t.score).toFixed(1)}%`)}}(),function(){const e=S.getHealthSummary(),t=(e,t)=>{const n=document.querySelector(e);n&&(n.textContent=t.toString())};t("#kpi-green-count",e.greenCount),t("#kpi-amber-count",e.amberCount),t("#kpi-red-count",e.redCount)}(),function(){const e=document.querySelector("#kpi-categories");if(!e)return;const t=S.getMetrics(),n=new Map(t.map(e=>[e.name,e]));let i="";Object.entries(B).forEach(([e,t])=>{const a=t.map(e=>n.get(e)).filter(e=>void 0!==e);0!==a.length&&(i+=`\n      <div class="kpi-category">\n        <h4 class="kpi-category-title">${e}</h4>\n        <div class="kpi-metrics-grid">\n          ${a.map(e=>function(e){const t=T[e.name],n=t?.unit||"",i=t?.description||e.name,a=function(e,t){switch(t){case"%":return`${(100*e).toFixed(1)}%`;case"ms":return e<1e3?`${e.toFixed(0)}ms`:`${(e/1e3).toFixed(1)}s`;case"ratio":default:return e.toFixed(2);case"per 1k":return e.toFixed(1)}}(e.value,n),r=function(e){switch(e){case"up":return"📈";case"down":return"📉";case"stable":return"➡️"}}(e.trend);return`\n    <div class="kpi-metric-card ${e.status}" title="${i}">\n      <div class="kpi-metric-header">\n        <span class="kpi-metric-name">${s=e.name,s.replace(/_/g," ").replace(/\b\w/g,e=>e.toUpperCase())}</span>\n        <span class="kpi-trend-icon">${r}</span>\n      </div>\n      <div class="kpi-metric-value">${a}</div>\n      <div class="kpi-metric-status ${e.status}">\n        ${e.status.toUpperCase()}\n      </div>\n    </div>\n  `;var s}(e)).join("")}\n        </div>\n      </div>\n    `)}),e.innerHTML=i||'\n    <div class="kpi-empty">\n      <p class="text-muted">No metrics available. System is initializing...</p>\n    </div>\n  '}()}function A(e,t="info"){const n=document.createElement("div");n.className=`kpi-notification ${t}`,n.textContent=e,document.body.appendChild(n),setTimeout(()=>n.remove(),3e3)}const I=new class{constructor(){this.startTimes=new Map,this.metrics=new Map}startMeasurement(e){this.startTimes.set(e,performance.now())}endMeasurement(e,t){const n=this.startTimes.get(e);if(void 0===n)return;const i=performance.now()-n;this.recordMetric(t,i),this.startTimes.delete(e)}recordMetric(e,t){this.metrics.has(e)||this.metrics.set(e,[]);const n=this.metrics.get(e);n.push(t),n.length>10&&n.shift();const i=E(e,n.reduce((e,t)=>e+t,0)/n.length,this.calculateTrend(n));window.dispatchEvent(new CustomEvent(k,{detail:{kpi:e,value:i}}))}calculateTrend(e){if(e.length<3)return"stable";const t=e.slice(-3),n=e.slice(-6,-3);if(0===n.length)return"stable";const i=t.reduce((e,t)=>e+t,0)/t.length,a=n.reduce((e,t)=>e+t,0)/n.length,r=(i-a)/a;return r>.05?"up":r<-.05?"down":"stable"}startSystemMonitoring(){this.monitorFetchRequests(),this.monitorRulerSwitching(),setInterval(()=>{this.collectSystemMetrics()},3e4)}monitorFetchRequests(){const e=window.fetch;window.fetch=async(...t)=>{const n=performance.now();try{const i=await e(...t),a=performance.now()-n;return this.recordMetric("api_response_time",a),i}catch(e){const t=performance.now()-n;throw this.recordMetric("api_response_time",t),e}}}monitorRulerSwitching(){window.addEventListener(w,()=>{const e=300*Math.random()+100;this.recordMetric("ruler_switch_time",e)})}collectSystemMetrics(){const e=performance.timeOrigin,t=(Date.now()-e)/36e5,n=Math.min(.999,.95+t/1e3);this.recordMetric("system_uptime",n),this.recordMetric("ruler_adoption_rate",.4*Math.random()+.5),this.recordMetric("money_veil_calculation_time",200*Math.random()+200),this.recordMetric("money_veil_engagement",.3*Math.random()+.3),this.recordMetric("hamburger_viral_coefficient",.2*Math.random()+.2),this.recordMetric("contract_completion_rate",.15*Math.random()+.85),this.recordMetric("cohort_satisfaction_rate",.08*Math.random()+.92),this.recordMetric("failed_payment_rate",.005*Math.random());"true"===localStorage.getItem("bovi.stormMode.active")&&(this.recordMetric("storm_mode_activation_time",3e3*Math.random()+2e3),this.recordMetric("storm_mode_effectiveness",.15*Math.random()+.15))}clearMetrics(){this.metrics.clear(),this.startTimes.clear()}};class L{constructor(){this.navigation=null,this.initialized=!1}async init(){if(!this.initialized)try{this.navigation=(u||(u=new m),u),await Promise.resolve().then(function(){return N}),await this.loadDemos(),this.setupEventListeners(),$(),I.startSystemMonitoring(),setTimeout(()=>{[E("ruler_switch_time",150,"stable"),E("ruler_adoption_rate",.65,"up"),E("money_veil_calculation_time",350,"stable"),E("money_veil_engagement",.42,"up"),E("hamburger_viral_coefficient",.28,"down"),E("contract_completion_rate",.92,"stable"),E("cohort_satisfaction_rate",.96,"up"),E("storm_mode_activation_time",4200,"stable"),E("system_uptime",.995,"stable"),E("failed_payment_rate",.003,"down")].forEach(e=>{window.dispatchEvent(new CustomEvent(k,{detail:{kpi:e.name,value:e}}))})},2e3),this.handleInitialRoute(),this.initialized=!0,console.log("BOVI App initialized successfully")}catch(e){console.error("Failed to initialize BOVI App:",e)}}async loadDemos(){try{await Promise.resolve().then(function(){return j})}catch(e){console.warn("Some demos failed to load:",e)}}setupEventListeners(){d(document,"[data-demo]","click",e=>{const t=e.target,n=t.dataset.demo,i=t.dataset.container||`#${n}Result`;n&&((e,t)=>{b.runDemo(e,t)})(n,i)}),d(document,"[data-scenario]","click",e=>{const t=e.target,n=t.dataset.scenario,i=t.dataset.container||"#scenarioResult";n&&v(n,i)}),c(window,"bovi:navigate",e=>{this.onNavigate(e.detail.tab)}),c(document,"keydown",e=>{this.handleKeyboardShortcuts(e)})}onNavigate(e){switch(e){case"balanced":case"obligated":case"value":case"immediate":this.initializeModeTab(e);break;case"scenarios":this.initializeScenariosTab();break;case"bundle":this.initializeBundleTab()}}initializeModeTab(t){const n=e(`#${t}Demo`);n&&!n.dataset.initialized&&(n.dataset.initialized="true")}initializeScenariosTab(){t(".scenario").forEach(e=>{const t=e;if(!t.dataset.initialized){const e=t.dataset.scenario;e&&(c(t,"click",()=>{v(e,"#scenarioResult")}),t.dataset.initialized="true")}})}initializeBundleTab(){}handleInitialRoute(){const e=window.location.hash.slice(1);e&&this.navigation&&this.navigation.goTo(e)}handleKeyboardShortcuts(t){const n=t.target;if("INPUT"!==n.tagName&&"TEXTAREA"!==n.tagName){if(t.altKey){const e={1:"overview",2:"balanced",3:"obligated",4:"value",5:"immediate",6:"scenarios",7:"bundle"}[t.key];e&&this.navigation&&(t.preventDefault(),this.navigation.goTo(e))}if("Escape"===t.key){const t=e(".demo-result:not([hidden]), .scenario-analysis:not([hidden])");t&&t.parentElement&&(t.parentElement.hidden=!0)}}}}let D=null;const z=()=>(D||(D=new L),D.init());"loading"===document.readyState?document.addEventListener("DOMContentLoaded",z):z();const P=new p("rent","Rent Collection Analysis","balanced","Monthly rent payments create a ongoing relationship between tenant and landlord that involves multiple fairness modes.").addModeBreakdown("balanced","Monthly payment creates symmetric obligation. Tenant receives housing, landlord receives payment. Both parties expect the relationship to balance over time through consistent performance.").addModeBreakdown("obligated","Legal framework enforces the rental contract. Courts provide authority backing. Eviction procedures represent hierarchical power when obligations are not met.").addModeBreakdown("value","Rent amount reflects market pricing of housing value. Location, size, and amenities determine proportional exchange rates in the local market.").addModeBreakdown("immediate",'"Roof over head for money" feels directly fair at gut level. The exchange appears viscerally equivalent - shelter for payment.').addInsights("Primary mode is Balanced because ongoing monthly exchanges require symmetric record-keeping","Rent control policies often conflict between Value mode (market pricing) and Immediate mode (affordability intuitions)","Landlord-tenant disputes usually center on which fairness mode should dominate the relationship"),q=new p("tax","Tax Payment Analysis","obligated","Government taxation demonstrates how authority creates money demand through hierarchical obligation.").addModeBreakdown("obligated","Government authority requires payment regardless of individual preference. No choice - you owe what the hierarchy demands based on rules and status.").addModeBreakdown("balanced",'Citizens expect public services in return for taxes paid. "Social contract" implies symmetric obligations between government and governed.').addModeBreakdown("value","Tax rates theoretically reflect proportional contribution to society based on income, wealth, or consumption capacity.").addModeBreakdown("immediate",'"Pay your fair share" appeals to direct reciprocity instinct. Community membership implies mutual contribution obligations.').addInsights("Tax resistance often occurs when Obligated mode lacks legitimacy from other modes","Progressive taxation conflicts between Value mode (proportional) and Immediate mode (equal treatment)","Tax compliance depends on Authority Ranking acceptance combined with Balanced mode service expectations"),O=new p("market","Farmers Market Analysis","value","Direct commerce at farmers markets demonstrates pure market pricing with supporting fairness modes.").addModeBreakdown("value","Cash enables proportional exchange. $5 apples versus $2 carrots - units are interchangeable tokens representing relative value.").addModeBreakdown("immediate",'"Good produce for good money" feels directly equivalent. Quality food for quality currency appears viscerally fair.').addModeBreakdown("balanced","Repeated transactions create reputation ledger over time. Vendors and customers build symmetric relationships through consistent exchanges.").addModeBreakdown("obligated","Health regulations and market rules provide authority framework. Permits, inspections, and standards create hierarchical oversight.").addInsights("Local markets often emphasize Immediate and Balanced modes over pure Value mode efficiency","Vendor relationships matter - people pay premiums for trusted sources despite Value mode alternatives","Farmers markets resist corporate Value mode optimization in favor of community-oriented fairness"),R=new p("favor","Neighborhood Favors Analysis","immediate","Direct reciprocity between neighbors demonstrates pure Immediate mode fairness with minimal institutional mediation.").addModeBreakdown("immediate","Direct reciprocity dominates. Childcare time for fence repair time - equivalent effort exchange within community boundaries.").addModeBreakdown("balanced",'"You helped me, now I help you" creates ongoing account of mutual aid. Community members track reciprocity patterns over time.').addModeBreakdown("value","Both parties assess whether the trade feels proportionally fair. Time spent versus favor received gets informal market evaluation.").addModeBreakdown("obligated","Social pressure and community norms enforce reciprocity expectations. Neighborhood reputation creates informal authority structure.").addInsights("Immediate mode works best in small, stable communities where reputation matters","Monetizing neighbor relationships often feels wrong because it violates Immediate mode expectations","Community resilience depends on maintaining Immediate mode networks alongside formal economy"),F=new p("grocery","Grocery Shopping Analysis","value","Supermarket transactions demonstrate how Value mode efficiency can conflict with other fairness intuitions.").addModeBreakdown("value","Standardized pricing and UPC codes enable efficient proportional exchange. Price comparison shopping optimizes value ratios.").addModeBreakdown("obligated",'Corporate pricing power and regulatory frameworks create authority relationships. "Take it or leave it" pricing demonstrates hierarchical control.').addModeBreakdown("balanced","Loyalty programs attempt to create symmetric relationships. Points and discounts reward repeated patronage over time.").addModeBreakdown("immediate","Fresh food for cash feels viscerally equivalent. But corporate intermediation distances consumers from direct producer relationships.").addInsights("Shrinkflation violates Balanced mode expectations - same price, less product feels like cheating","Local grocery stores often succeed by emphasizing Immediate and Balanced modes over pure Value efficiency","Supply chain disruptions reveal how Value mode optimization sacrifices other fairness modes");g(P),g(q),g(O),g(R),g(F);var V,N=Object.freeze({__proto__:null,favorScenario:R,groceryScenario:F,marketScenario:O,rentScenario:P,taxScenario:q});V=new class extends f{constructor(){super("tally","Village Tally Network","balanced","Experience how medieval villagers used split sticks to track debts and maintain fairness over time")}async run(e){const t=`\n      <div class="demo-scenario">\n        <p><strong>Scenario:</strong> Alice owes Bob 3 chickens for winter grain. They create a tally stick to record the debt.</p>\n        \n        <div class="tally-visualization">\n          <div class="tally-stick">\n            <div class="stock">📋 Alice's Stock</div>\n            <div class="split-line">✂️</div>\n            <div class="foil">📋 Bob's Foil</div>\n          </div>\n        </div>\n        \n        <div class="demo-steps">\n          <div class="step">\n            <span class="step-number">1</span>\n            <div class="step-content">\n              <strong>Record Debt:</strong> Notches carved for 3 chickens\n            </div>\n          </div>\n          <div class="step">\n            <span class="step-number">2</span>\n            <div class="step-content">\n              <strong>Split Stick:</strong> Alice keeps "stock," Bob keeps "foil"\n            </div>\n          </div>\n          <div class="step">\n            <span class="step-number">3</span>\n            <div class="step-content">\n              <strong>Proof System:</strong> Both pieces must match to settle debt\n            </div>\n          </div>\n        </div>\n        \n        <div class="balanced-features">\n          <h5>Balanced Mode Features:</h5>\n          <ul>\n            <li>✅ Both parties have proof of the debt</li>\n            <li>✅ Cannot be counterfeited (pieces must match exactly)</li>\n            <li>✅ Symmetric obligation (both hold records)</li>\n            <li>✅ Debt settled when pieces reunite</li>\n          </ul>\n        </div>\n      </div>\n      \n      ${this.createModeAnalysis({balanced:"Primary mode - tally creates symmetric record-keeping system where both parties maintain proof of obligation",obligated:"Village customs and social pressure enforce the tally system's legitimacy",value:"Standard notch system allows proportional representation of different debt amounts",immediate:'Physical splitting feels viscerally fair - "you get half, I get half"'})}\n    `;this.createDemoStructure(e,t);const n=document.createElement("style");n.textContent="\n      .tally-visualization {\n        display: flex;\n        justify-content: center;\n        margin: 20px 0;\n      }\n      \n      .tally-stick {\n        display: flex;\n        align-items: center;\n        gap: 10px;\n        padding: 20px;\n        background: rgba(255,255,255,.05);\n        border-radius: 12px;\n        border: 2px solid var(--balanced);\n      }\n      \n      .stock, .foil {\n        padding: 10px 15px;\n        background: rgba(76,201,240,.15);\n        border-radius: 8px;\n        font-size: 14px;\n      }\n      \n      .split-line {\n        font-size: 20px;\n        animation: pulse 2s infinite;\n      }\n      \n      @keyframes pulse {\n        0%, 100% { opacity: 1; }\n        50% { opacity: 0.5; }\n      }\n      \n      .demo-steps {\n        display: grid;\n        gap: 15px;\n        margin: 20px 0;\n      }\n      \n      .step {\n        display: flex;\n        gap: 15px;\n        align-items: flex-start;\n      }\n      \n      .step-number {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 28px;\n        height: 28px;\n        border-radius: 50%;\n        background: var(--balanced);\n        color: #000;\n        font-weight: 600;\n        flex-shrink: 0;\n      }\n      \n      .balanced-features {\n        margin-top: 20px;\n        padding: 15px;\n        background: rgba(76,201,240,.08);\n        border-radius: 8px;\n        border-left: 4px solid var(--balanced);\n      }\n      \n      .balanced-features ul {\n        margin: 10px 0 0 0;\n        padding-left: 0;\n        list-style: none;\n      }\n      \n      .balanced-features li {\n        margin: 8px 0;\n        font-size: 14px;\n      }\n    ",document.head.appendChild(n)}},b.registerDemo(V.id,V);var j=Object.freeze({__proto__:null});export{L as BoviApp,z as initApp};
